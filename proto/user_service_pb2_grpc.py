# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from . import user_service_pb2 as user__service__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in user_service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateUser = channel.unary_unary(
                '/user_service.UserService/CreateUser',
                request_serializer=user__service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.VerifyOtp = channel.unary_unary(
                '/user_service.UserService/VerifyOtp',
                request_serializer=user__service__pb2.VerifyOtpRequest.SerializeToString,
                response_deserializer=user__service__pb2.VerifyOtpResponse.FromString,
                _registered_method=True)
        self.LoginUser = channel.unary_unary(
                '/user_service.UserService/LoginUser',
                request_serializer=user__service__pb2.LoginUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.LoginResponse.FromString,
                _registered_method=True)
        self.GoogleUser = channel.unary_unary(
                '/user_service.UserService/GoogleUser',
                request_serializer=user__service__pb2.GoogleUserRequest.SerializeToString,
                response_deserializer=user__service__pb2.GoogleUserResponse.FromString,
                _registered_method=True)
        self.LoginAdmin = channel.unary_unary(
                '/user_service.UserService/LoginAdmin',
                request_serializer=user__service__pb2.LoginAdminRequest.SerializeToString,
                response_deserializer=user__service__pb2.LoginAdminResponse.FromString,
                _registered_method=True)
        self.ResendOtp = channel.unary_unary(
                '/user_service.UserService/ResendOtp',
                request_serializer=user__service__pb2.ResendOtpRequest.SerializeToString,
                response_deserializer=user__service__pb2.ResendOtpResponse.FromString,
                _registered_method=True)
        self.UserList = channel.unary_unary(
                '/user_service.UserService/UserList',
                request_serializer=user__service__pb2.UserListRequest.SerializeToString,
                response_deserializer=user__service__pb2.UserListResponse.FromString,
                _registered_method=True)
        self.Autherization = channel.unary_unary(
                '/user_service.UserService/Autherization',
                request_serializer=user__service__pb2.AuthRequest.SerializeToString,
                response_deserializer=user__service__pb2.AuthResponse.FromString,
                _registered_method=True)
        self.BlockUnblockUser = channel.unary_unary(
                '/user_service.UserService/BlockUnblockUser',
                request_serializer=user__service__pb2.BlockUnBlockRequest.SerializeToString,
                response_deserializer=user__service__pb2.BlockUnBlockResponse.FromString,
                _registered_method=True)
        self.ProfileData = channel.unary_unary(
                '/user_service.UserService/ProfileData',
                request_serializer=user__service__pb2.ProfileDataRequest.SerializeToString,
                response_deserializer=user__service__pb2.ProfileDataResponse.FromString,
                _registered_method=True)
        self.ProfileUpdate = channel.unary_unary(
                '/user_service.UserService/ProfileUpdate',
                request_serializer=user__service__pb2.ProfileUpdateRequest.SerializeToString,
                response_deserializer=user__service__pb2.ProfileUpdateResponse.FromString,
                _registered_method=True)
        self.ForgotEmail = channel.unary_unary(
                '/user_service.UserService/ForgotEmail',
                request_serializer=user__service__pb2.ForgoteEmailRequest.SerializeToString,
                response_deserializer=user__service__pb2.ForgoteEmailResponse.FromString,
                _registered_method=True)
        self.ChangePassword = channel.unary_unary(
                '/user_service.UserService/ChangePassword',
                request_serializer=user__service__pb2.ChangePasswordRequest.SerializeToString,
                response_deserializer=user__service__pb2.ChangePasswordResponse.FromString,
                _registered_method=True)
        self.PostProfile = channel.unary_unary(
                '/user_service.UserService/PostProfile',
                request_serializer=user__service__pb2.PostProfileRequest.SerializeToString,
                response_deserializer=user__service__pb2.PostProfileResponse.FromString,
                _registered_method=True)
        self.PostUniqueData = channel.unary_unary(
                '/user_service.UserService/PostUniqueData',
                request_serializer=user__service__pb2.PostUniqueDataRequest.SerializeToString,
                response_deserializer=user__service__pb2.PostUniqueDataResponse.FromString,
                _registered_method=True)
        self.CommentUniqueData = channel.unary_unary(
                '/user_service.UserService/CommentUniqueData',
                request_serializer=user__service__pb2.CommentUniqueDataRequest.SerializeToString,
                response_deserializer=user__service__pb2.CommentUniqueDataResponse.FromString,
                _registered_method=True)
        self.UserFollow = channel.unary_unary(
                '/user_service.UserService/UserFollow',
                request_serializer=user__service__pb2.UserFollowRequest.SerializeToString,
                response_deserializer=user__service__pb2.UserFollowResponse.FromString,
                _registered_method=True)
        self.UserSearch = channel.unary_unary(
                '/user_service.UserService/UserSearch',
                request_serializer=user__service__pb2.UserSearchRequest.SerializeToString,
                response_deserializer=user__service__pb2.UserSearchResponse.FromString,
                _registered_method=True)
        self.GetAllFriends = channel.unary_unary(
                '/user_service.UserService/GetAllFriends',
                request_serializer=user__service__pb2.GetAllFriendsRequest.SerializeToString,
                response_deserializer=user__service__pb2.GetAllFriendsResponse.FromString,
                _registered_method=True)
        self.CreateNewToken = channel.unary_unary(
                '/user_service.UserService/CreateNewToken',
                request_serializer=user__service__pb2.CreateNewTokenRequest.SerializeToString,
                response_deserializer=user__service__pb2.CreateNewTokenResponse.FromString,
                _registered_method=True)
        self.DashboardUserDetails = channel.unary_unary(
                '/user_service.UserService/DashboardUserDetails',
                request_serializer=user__service__pb2.DashboardUserDetailsRequest.SerializeToString,
                response_deserializer=user__service__pb2.DashboardUserDetailsResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyOtp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GoogleUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoginAdmin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResendOtp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Autherization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BlockUnblockUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProfileData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProfileUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ForgotEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangePassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostProfile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostUniqueData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CommentUniqueData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserFollow(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UserSearch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllFriends(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateNewToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DashboardUserDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=user__service__pb2.CreateUserRequest.FromString,
                    response_serializer=user__service__pb2.CreateUserResponse.SerializeToString,
            ),
            'VerifyOtp': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyOtp,
                    request_deserializer=user__service__pb2.VerifyOtpRequest.FromString,
                    response_serializer=user__service__pb2.VerifyOtpResponse.SerializeToString,
            ),
            'LoginUser': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginUser,
                    request_deserializer=user__service__pb2.LoginUserRequest.FromString,
                    response_serializer=user__service__pb2.LoginResponse.SerializeToString,
            ),
            'GoogleUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GoogleUser,
                    request_deserializer=user__service__pb2.GoogleUserRequest.FromString,
                    response_serializer=user__service__pb2.GoogleUserResponse.SerializeToString,
            ),
            'LoginAdmin': grpc.unary_unary_rpc_method_handler(
                    servicer.LoginAdmin,
                    request_deserializer=user__service__pb2.LoginAdminRequest.FromString,
                    response_serializer=user__service__pb2.LoginAdminResponse.SerializeToString,
            ),
            'ResendOtp': grpc.unary_unary_rpc_method_handler(
                    servicer.ResendOtp,
                    request_deserializer=user__service__pb2.ResendOtpRequest.FromString,
                    response_serializer=user__service__pb2.ResendOtpResponse.SerializeToString,
            ),
            'UserList': grpc.unary_unary_rpc_method_handler(
                    servicer.UserList,
                    request_deserializer=user__service__pb2.UserListRequest.FromString,
                    response_serializer=user__service__pb2.UserListResponse.SerializeToString,
            ),
            'Autherization': grpc.unary_unary_rpc_method_handler(
                    servicer.Autherization,
                    request_deserializer=user__service__pb2.AuthRequest.FromString,
                    response_serializer=user__service__pb2.AuthResponse.SerializeToString,
            ),
            'BlockUnblockUser': grpc.unary_unary_rpc_method_handler(
                    servicer.BlockUnblockUser,
                    request_deserializer=user__service__pb2.BlockUnBlockRequest.FromString,
                    response_serializer=user__service__pb2.BlockUnBlockResponse.SerializeToString,
            ),
            'ProfileData': grpc.unary_unary_rpc_method_handler(
                    servicer.ProfileData,
                    request_deserializer=user__service__pb2.ProfileDataRequest.FromString,
                    response_serializer=user__service__pb2.ProfileDataResponse.SerializeToString,
            ),
            'ProfileUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ProfileUpdate,
                    request_deserializer=user__service__pb2.ProfileUpdateRequest.FromString,
                    response_serializer=user__service__pb2.ProfileUpdateResponse.SerializeToString,
            ),
            'ForgotEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.ForgotEmail,
                    request_deserializer=user__service__pb2.ForgoteEmailRequest.FromString,
                    response_serializer=user__service__pb2.ForgoteEmailResponse.SerializeToString,
            ),
            'ChangePassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangePassword,
                    request_deserializer=user__service__pb2.ChangePasswordRequest.FromString,
                    response_serializer=user__service__pb2.ChangePasswordResponse.SerializeToString,
            ),
            'PostProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.PostProfile,
                    request_deserializer=user__service__pb2.PostProfileRequest.FromString,
                    response_serializer=user__service__pb2.PostProfileResponse.SerializeToString,
            ),
            'PostUniqueData': grpc.unary_unary_rpc_method_handler(
                    servicer.PostUniqueData,
                    request_deserializer=user__service__pb2.PostUniqueDataRequest.FromString,
                    response_serializer=user__service__pb2.PostUniqueDataResponse.SerializeToString,
            ),
            'CommentUniqueData': grpc.unary_unary_rpc_method_handler(
                    servicer.CommentUniqueData,
                    request_deserializer=user__service__pb2.CommentUniqueDataRequest.FromString,
                    response_serializer=user__service__pb2.CommentUniqueDataResponse.SerializeToString,
            ),
            'UserFollow': grpc.unary_unary_rpc_method_handler(
                    servicer.UserFollow,
                    request_deserializer=user__service__pb2.UserFollowRequest.FromString,
                    response_serializer=user__service__pb2.UserFollowResponse.SerializeToString,
            ),
            'UserSearch': grpc.unary_unary_rpc_method_handler(
                    servicer.UserSearch,
                    request_deserializer=user__service__pb2.UserSearchRequest.FromString,
                    response_serializer=user__service__pb2.UserSearchResponse.SerializeToString,
            ),
            'GetAllFriends': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllFriends,
                    request_deserializer=user__service__pb2.GetAllFriendsRequest.FromString,
                    response_serializer=user__service__pb2.GetAllFriendsResponse.SerializeToString,
            ),
            'CreateNewToken': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateNewToken,
                    request_deserializer=user__service__pb2.CreateNewTokenRequest.FromString,
                    response_serializer=user__service__pb2.CreateNewTokenResponse.SerializeToString,
            ),
            'DashboardUserDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.DashboardUserDetails,
                    request_deserializer=user__service__pb2.DashboardUserDetailsRequest.FromString,
                    response_serializer=user__service__pb2.DashboardUserDetailsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'user_service.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('user_service.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/CreateUser',
            user__service__pb2.CreateUserRequest.SerializeToString,
            user__service__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyOtp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/VerifyOtp',
            user__service__pb2.VerifyOtpRequest.SerializeToString,
            user__service__pb2.VerifyOtpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/LoginUser',
            user__service__pb2.LoginUserRequest.SerializeToString,
            user__service__pb2.LoginResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GoogleUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GoogleUser',
            user__service__pb2.GoogleUserRequest.SerializeToString,
            user__service__pb2.GoogleUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def LoginAdmin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/LoginAdmin',
            user__service__pb2.LoginAdminRequest.SerializeToString,
            user__service__pb2.LoginAdminResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ResendOtp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ResendOtp',
            user__service__pb2.ResendOtpRequest.SerializeToString,
            user__service__pb2.ResendOtpResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/UserList',
            user__service__pb2.UserListRequest.SerializeToString,
            user__service__pb2.UserListResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Autherization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/Autherization',
            user__service__pb2.AuthRequest.SerializeToString,
            user__service__pb2.AuthResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BlockUnblockUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/BlockUnblockUser',
            user__service__pb2.BlockUnBlockRequest.SerializeToString,
            user__service__pb2.BlockUnBlockResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProfileData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ProfileData',
            user__service__pb2.ProfileDataRequest.SerializeToString,
            user__service__pb2.ProfileDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProfileUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ProfileUpdate',
            user__service__pb2.ProfileUpdateRequest.SerializeToString,
            user__service__pb2.ProfileUpdateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ForgotEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ForgotEmail',
            user__service__pb2.ForgoteEmailRequest.SerializeToString,
            user__service__pb2.ForgoteEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ChangePassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/ChangePassword',
            user__service__pb2.ChangePasswordRequest.SerializeToString,
            user__service__pb2.ChangePasswordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PostProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/PostProfile',
            user__service__pb2.PostProfileRequest.SerializeToString,
            user__service__pb2.PostProfileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PostUniqueData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/PostUniqueData',
            user__service__pb2.PostUniqueDataRequest.SerializeToString,
            user__service__pb2.PostUniqueDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CommentUniqueData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/CommentUniqueData',
            user__service__pb2.CommentUniqueDataRequest.SerializeToString,
            user__service__pb2.CommentUniqueDataResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserFollow(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/UserFollow',
            user__service__pb2.UserFollowRequest.SerializeToString,
            user__service__pb2.UserFollowResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UserSearch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/UserSearch',
            user__service__pb2.UserSearchRequest.SerializeToString,
            user__service__pb2.UserSearchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllFriends(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/GetAllFriends',
            user__service__pb2.GetAllFriendsRequest.SerializeToString,
            user__service__pb2.GetAllFriendsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateNewToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/CreateNewToken',
            user__service__pb2.CreateNewTokenRequest.SerializeToString,
            user__service__pb2.CreateNewTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DashboardUserDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/user_service.UserService/DashboardUserDetails',
            user__service__pb2.DashboardUserDetailsRequest.SerializeToString,
            user__service__pb2.DashboardUserDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
